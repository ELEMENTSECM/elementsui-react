// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lookup with options property should be displayed correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lookup
    allowSearchWithEmptyFilter={true}
    delay={300}
    delimiter=";"
    id="testLookup"
    idSelector={[Function]}
    isClearable={true}
    isMulti={false}
    menuPlacement="bottom"
    openMenuOnFocus={false}
    options={
      Array [
        Object {
          "label": "Title 1",
          "value": 1,
        },
        Object {
          "label": "Title 2",
          "value": 2,
        },
      ]
    }
    pageSize={30}
    placeholder=""
    queryProvider={[Function]}
    renderOption={[Function]}
    styles={
      Object {
        "control": [Function],
        "indicatorsContainer": [Function],
        "menu": [Function],
        "menuPortal": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Select
          aria-label={undefined}
          aria-labelledby={undefined}
          backspaceRemovesValue={true}
          blurInputOnSelect={true}
          captureMenuScroll={false}
          className="lookup"
          closeMenuOnScroll={false}
          closeMenuOnSelect={true}
          components={
            Object {
              "MultiValue": [Function],
              "MultiValueContainer": [Function],
              "MultiValueLabel": [Function],
            }
          }
          controlShouldRenderValue={true}
          escapeClearsValue={false}
          filterOption={[Function]}
          formatGroupLabel={[Function]}
          getOptionLabel={[Function]}
          getOptionValue={[Function]}
          id="testLookup"
          inputId={undefined}
          inputValue=""
          isClearable={true}
          isDisabled={false}
          isLoading={false}
          isMulti={false}
          isOptionDisabled={[Function]}
          isRtl={false}
          isSearchable={true}
          loadingMessage={[Function]}
          maxMenuHeight={300}
          menuIsOpen={false}
          menuPlacement="bottom"
          menuPosition="absolute"
          menuShouldBlockScroll={false}
          menuShouldScrollIntoView={true}
          minMenuHeight={140}
          noOptionsMessage={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInputChange={[Function]}
          onKeyDown={[Function]}
          onMenuClose={[Function]}
          onMenuOpen={[Function]}
          onMenuScrollToBottom={[Function]}
          openMenuOnClick={true}
          openMenuOnFocus={false}
          options={
            Array [
              Object {
                "label": "Title 1",
                "value": 1,
              },
              Object {
                "label": "Title 2",
                "value": 2,
              },
            ]
          }
          pageSize={5}
          placeholder=""
          screenReaderStatus={[Function]}
          styles={
            Object {
              "control": [Function],
              "indicatorsContainer": [Function],
              "menu": [Function],
              "menuPortal": [Function],
            }
          }
          tabIndex="0"
          tabSelectsValue={false}
          theme={undefined}
          value={undefined}
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": undefined,
          "aria-labelledby": undefined,
          "backspaceRemovesValue": true,
          "blurInputOnSelect": true,
          "captureMenuScroll": false,
          "className": "lookup",
          "closeMenuOnScroll": false,
          "closeMenuOnSelect": true,
          "components": Object {
            "MultiValue": [Function],
            "MultiValueContainer": [Function],
            "MultiValueLabel": [Function],
          },
          "controlShouldRenderValue": true,
          "escapeClearsValue": false,
          "filterOption": [Function],
          "formatGroupLabel": [Function],
          "getOptionLabel": [Function],
          "getOptionValue": [Function],
          "id": "testLookup",
          "inputId": undefined,
          "inputValue": "",
          "isClearable": true,
          "isDisabled": false,
          "isLoading": false,
          "isMulti": false,
          "isOptionDisabled": [Function],
          "isRtl": false,
          "isSearchable": true,
          "loadingMessage": [Function],
          "maxMenuHeight": 300,
          "menuIsOpen": false,
          "menuPlacement": "bottom",
          "menuPosition": "absolute",
          "menuShouldBlockScroll": false,
          "menuShouldScrollIntoView": true,
          "minMenuHeight": 140,
          "noOptionsMessage": [Function],
          "onBlur": [Function],
          "onChange": [Function],
          "onFocus": [Function],
          "onInputChange": [Function],
          "onKeyDown": [Function],
          "onMenuClose": [Function],
          "onMenuOpen": [Function],
          "onMenuScrollToBottom": [Function],
          "openMenuOnClick": true,
          "openMenuOnFocus": false,
          "options": Array [
            Object {
              "label": "Title 1",
              "value": 1,
            },
            Object {
              "label": "Title 2",
              "value": 2,
            },
          ],
          "pageSize": 5,
          "placeholder": "",
          "screenReaderStatus": [Function],
          "styles": Object {
            "control": [Function],
            "indicatorsContainer": [Function],
            "menu": [Function],
            "menuPortal": [Function],
          },
          "tabIndex": "0",
          "tabSelectsValue": false,
          "theme": undefined,
          "value": undefined,
        },
        "ref": Object {
          "current": null,
        },
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Select
            aria-label={undefined}
            aria-labelledby={undefined}
            backspaceRemovesValue={true}
            blurInputOnSelect={true}
            captureMenuScroll={false}
            className="lookup"
            closeMenuOnScroll={false}
            closeMenuOnSelect={true}
            components={
              Object {
                "MultiValue": [Function],
                "MultiValueContainer": [Function],
                "MultiValueLabel": [Function],
              }
            }
            controlShouldRenderValue={true}
            escapeClearsValue={false}
            filterOption={[Function]}
            formatGroupLabel={[Function]}
            getOptionLabel={[Function]}
            getOptionValue={[Function]}
            id="testLookup"
            inputId={undefined}
            inputValue=""
            isClearable={true}
            isDisabled={false}
            isLoading={false}
            isMulti={false}
            isOptionDisabled={[Function]}
            isRtl={false}
            isSearchable={true}
            loadingMessage={[Function]}
            maxMenuHeight={300}
            menuIsOpen={false}
            menuPlacement="bottom"
            menuPosition="absolute"
            menuShouldBlockScroll={false}
            menuShouldScrollIntoView={true}
            minMenuHeight={140}
            noOptionsMessage={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onInputChange={[Function]}
            onKeyDown={[Function]}
            onMenuClose={[Function]}
            onMenuOpen={[Function]}
            onMenuScrollToBottom={[Function]}
            openMenuOnClick={true}
            openMenuOnFocus={false}
            options={
              Array [
                Object {
                  "label": "Title 1",
                  "value": 1,
                },
                Object {
                  "label": "Title 2",
                  "value": 2,
                },
              ]
            }
            pageSize={5}
            placeholder=""
            screenReaderStatus={[Function]}
            styles={
              Object {
                "control": [Function],
                "indicatorsContainer": [Function],
                "menu": [Function],
                "menuPortal": [Function],
              }
            }
            tabIndex="0"
            tabSelectsValue={false}
            theme={undefined}
            value={undefined}
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": undefined,
            "aria-labelledby": undefined,
            "backspaceRemovesValue": true,
            "blurInputOnSelect": true,
            "captureMenuScroll": false,
            "className": "lookup",
            "closeMenuOnScroll": false,
            "closeMenuOnSelect": true,
            "components": Object {
              "MultiValue": [Function],
              "MultiValueContainer": [Function],
              "MultiValueLabel": [Function],
            },
            "controlShouldRenderValue": true,
            "escapeClearsValue": false,
            "filterOption": [Function],
            "formatGroupLabel": [Function],
            "getOptionLabel": [Function],
            "getOptionValue": [Function],
            "id": "testLookup",
            "inputId": undefined,
            "inputValue": "",
            "isClearable": true,
            "isDisabled": false,
            "isLoading": false,
            "isMulti": false,
            "isOptionDisabled": [Function],
            "isRtl": false,
            "isSearchable": true,
            "loadingMessage": [Function],
            "maxMenuHeight": 300,
            "menuIsOpen": false,
            "menuPlacement": "bottom",
            "menuPosition": "absolute",
            "menuShouldBlockScroll": false,
            "menuShouldScrollIntoView": true,
            "minMenuHeight": 140,
            "noOptionsMessage": [Function],
            "onBlur": [Function],
            "onChange": [Function],
            "onFocus": [Function],
            "onInputChange": [Function],
            "onKeyDown": [Function],
            "onMenuClose": [Function],
            "onMenuOpen": [Function],
            "onMenuScrollToBottom": [Function],
            "openMenuOnClick": true,
            "openMenuOnFocus": false,
            "options": Array [
              Object {
                "label": "Title 1",
                "value": 1,
              },
              Object {
                "label": "Title 2",
                "value": 2,
              },
            ],
            "pageSize": 5,
            "placeholder": "",
            "screenReaderStatus": [Function],
            "styles": Object {
              "control": [Function],
              "indicatorsContainer": [Function],
              "menu": [Function],
              "menuPortal": [Function],
            },
            "tabIndex": "0",
            "tabSelectsValue": false,
            "theme": undefined,
            "value": undefined,
          },
          "ref": Object {
            "current": null,
          },
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
