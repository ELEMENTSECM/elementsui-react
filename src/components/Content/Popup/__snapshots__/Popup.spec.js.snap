// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popup displays correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Popup
    aria-labelledby={undefined}
    autoFocus={true}
    backdropClassName="popup-overlay"
    containerClassName="popup-container"
    handle=".popup-container"
    hostClassName="popup-dialog"
    isDraggable={true}
    onHide={undefined}
    placement={undefined}
    show={true}
    targetNode={undefined}
  >
    <span>
      popup content
    </span>
  </Popup>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "aria-labelledby": undefined,
      "autoFocus": true,
      "backdrop": true,
      "backdropClassName": "popup-overlay",
      "backdropStyle": Object {
        "zIndex": 2000,
      },
      "children": <Popper
        placement={undefined}
        referenceElement={undefined}
      >
        [Function]
      </Popper>,
      "className": "popup-dialog",
      "enforceFocus": true,
      "keyboard": true,
      "manager": ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      },
      "onHide": [Function],
      "renderBackdrop": [Function],
      "restoreFocus": true,
      "show": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
        "placement": undefined,
        "referenceElement": undefined,
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-labelledby": undefined,
        "autoFocus": true,
        "backdrop": true,
        "backdropClassName": "popup-overlay",
        "backdropStyle": Object {
          "zIndex": 2000,
        },
        "children": <Popper
          placement={undefined}
          referenceElement={undefined}
        >
          [Function]
        </Popper>,
        "className": "popup-dialog",
        "enforceFocus": true,
        "keyboard": true,
        "manager": ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        },
        "onHide": [Function],
        "renderBackdrop": [Function],
        "restoreFocus": true,
        "show": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": [Function],
          "placement": undefined,
          "referenceElement": undefined,
        },
        "ref": null,
        "rendered": [Function],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
